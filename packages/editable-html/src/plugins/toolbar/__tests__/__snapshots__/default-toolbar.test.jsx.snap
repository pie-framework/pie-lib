// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default-toolbar snapshot renders 1`] = `
<div>
  <div />
  <WithStyles(RawDoneButton)
    onClick={[MockFunction]}
  />
</div>
`;

exports[`default-toolbar snapshot renders 1 plugins 1`] = `
<div>
  <div>
    <ToolbarButton
      key="0"
      onChange={[MockFunction]}
      value={
        Immutable.Record {
          "data": Immutable.Map {},
          "decorations": null,
          "document": Immutable.Record {
            "data": Immutable.Map {},
            "key": "3",
            "nodes": Immutable.List [],
          },
          "history": Immutable.Record {
            "redos": Immutable.Stack [],
            "undos": Immutable.Stack [],
          },
          "schema": Immutable.Record {
            "stack": Immutable.Record {
              "plugins": Array [
                Object {
                  "schema": Object {},
                },
              ],
            },
            "rules": Array [
              Object {
                "match": Object {
                  "object": "document",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Object {
                    "object": "block",
                  },
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Array [
                    Object {
                      "object": "inline",
                    },
                    Object {
                      "object": "text",
                    },
                  ],
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "inline",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "nodes": Array [
                  Object {
                    "min": 1,
                  },
                ],
                "normalize": [Function],
              },
              Object {
                "match": Object {
                  "isVoid": false,
                  "nodes": Array [
                    Object {
                      "match": Object {
                        "object": "text",
                      },
                    },
                  ],
                  "object": "inline",
                },
                "text": /\\[\\\\w\\\\W\\]\\+/,
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "block",
                },
                "normalize": [Function],
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "inline",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "normalize": [Function],
                "previous": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "text",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "normalize": [Function],
              },
            ],
          },
          "selection": Immutable.Record {
            "anchorKey": null,
            "anchorOffset": 0,
            "anchorPath": null,
            "focusKey": null,
            "focusOffset": 0,
            "focusPath": null,
            "isAtomic": false,
            "isBackward": false,
            "isFocused": false,
            "marks": null,
          },
        }
      }
    />
  </div>
  <WithStyles(RawDoneButton)
    onClick={[MockFunction]}
  />
</div>
`;

exports[`default-toolbar snapshot renders 1 plugins, 1 is disabled 1`] = `
<div>
  <div>
    <ToolbarButton
      key="0"
      onChange={[MockFunction]}
      value={
        Immutable.Record {
          "data": Immutable.Map {},
          "decorations": null,
          "document": Immutable.Record {
            "data": Immutable.Map {},
            "key": "5",
            "nodes": Immutable.List [],
          },
          "history": Immutable.Record {
            "redos": Immutable.Stack [],
            "undos": Immutable.Stack [],
          },
          "schema": Immutable.Record {
            "stack": Immutable.Record {
              "plugins": Array [
                Object {
                  "schema": Object {},
                },
              ],
            },
            "rules": Array [
              Object {
                "match": Object {
                  "object": "document",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Object {
                    "object": "block",
                  },
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Array [
                    Object {
                      "object": "inline",
                    },
                    Object {
                      "object": "text",
                    },
                  ],
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "inline",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "nodes": Array [
                  Object {
                    "min": 1,
                  },
                ],
                "normalize": [Function],
              },
              Object {
                "match": Object {
                  "isVoid": false,
                  "nodes": Array [
                    Object {
                      "match": Object {
                        "object": "text",
                      },
                    },
                  ],
                  "object": "inline",
                },
                "text": /\\[\\\\w\\\\W\\]\\+/,
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "block",
                },
                "normalize": [Function],
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "inline",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "normalize": [Function],
                "previous": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "text",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "normalize": [Function],
              },
            ],
          },
          "selection": Immutable.Record {
            "anchorKey": null,
            "anchorOffset": 0,
            "anchorPath": null,
            "focusKey": null,
            "focusOffset": 0,
            "focusPath": null,
            "isAtomic": false,
            "isBackward": false,
            "isFocused": false,
            "marks": null,
          },
        }
      }
    />
  </div>
  <WithStyles(RawDoneButton)
    onClick={[MockFunction]}
  />
</div>
`;

exports[`default-toolbar snapshot renders 2 plugins 1`] = `
<div>
  <div>
    <ToolbarButton
      key="0"
      onChange={[MockFunction]}
      value={
        Immutable.Record {
          "data": Immutable.Map {},
          "decorations": null,
          "document": Immutable.Record {
            "data": Immutable.Map {},
            "key": "4",
            "nodes": Immutable.List [],
          },
          "history": Immutable.Record {
            "redos": Immutable.Stack [],
            "undos": Immutable.Stack [],
          },
          "schema": Immutable.Record {
            "stack": Immutable.Record {
              "plugins": Array [
                Object {
                  "schema": Object {},
                },
              ],
            },
            "rules": Array [
              Object {
                "match": Object {
                  "object": "document",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Object {
                    "object": "block",
                  },
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Array [
                    Object {
                      "object": "inline",
                    },
                    Object {
                      "object": "text",
                    },
                  ],
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "inline",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "nodes": Array [
                  Object {
                    "min": 1,
                  },
                ],
                "normalize": [Function],
              },
              Object {
                "match": Object {
                  "isVoid": false,
                  "nodes": Array [
                    Object {
                      "match": Object {
                        "object": "text",
                      },
                    },
                  ],
                  "object": "inline",
                },
                "text": /\\[\\\\w\\\\W\\]\\+/,
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "block",
                },
                "normalize": [Function],
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "inline",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "normalize": [Function],
                "previous": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "text",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "normalize": [Function],
              },
            ],
          },
          "selection": Immutable.Record {
            "anchorKey": null,
            "anchorOffset": 0,
            "anchorPath": null,
            "focusKey": null,
            "focusOffset": 0,
            "focusPath": null,
            "isAtomic": false,
            "isBackward": false,
            "isFocused": false,
            "marks": null,
          },
        }
      }
    />
    <ToolbarButton
      key="1"
      onChange={[MockFunction]}
      value={
        Immutable.Record {
          "data": Immutable.Map {},
          "decorations": null,
          "document": Immutable.Record {
            "data": Immutable.Map {},
            "key": "4",
            "nodes": Immutable.List [],
          },
          "history": Immutable.Record {
            "redos": Immutable.Stack [],
            "undos": Immutable.Stack [],
          },
          "schema": Immutable.Record {
            "stack": Immutable.Record {
              "plugins": Array [
                Object {
                  "schema": Object {},
                },
              ],
            },
            "rules": Array [
              Object {
                "match": Object {
                  "object": "document",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Object {
                    "object": "block",
                  },
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Object {
                      "object": "block",
                    },
                  },
                ],
              },
              Object {
                "match": Object {
                  "first": Array [
                    Object {
                      "object": "inline",
                    },
                    Object {
                      "object": "text",
                    },
                  ],
                  "object": "block",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "inline",
                },
                "nodes": Array [
                  Object {
                    "match": Array [
                      Object {
                        "object": "inline",
                      },
                      Object {
                        "object": "text",
                      },
                    ],
                  },
                ],
              },
              Object {
                "match": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "nodes": Array [
                  Object {
                    "min": 1,
                  },
                ],
                "normalize": [Function],
              },
              Object {
                "match": Object {
                  "isVoid": false,
                  "nodes": Array [
                    Object {
                      "match": Object {
                        "object": "text",
                      },
                    },
                  ],
                  "object": "inline",
                },
                "text": /\\[\\\\w\\\\W\\]\\+/,
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "block",
                },
                "normalize": [Function],
              },
              Object {
                "first": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "last": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "match": Object {
                  "object": "inline",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
                "normalize": [Function],
                "previous": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "text",
                  },
                ],
              },
              Object {
                "match": Object {
                  "object": "text",
                },
                "next": Array [
                  Object {
                    "object": "block",
                  },
                  Object {
                    "object": "inline",
                  },
                ],
                "normalize": [Function],
              },
            ],
          },
          "selection": Immutable.Record {
            "anchorKey": null,
            "anchorOffset": 0,
            "anchorPath": null,
            "focusKey": null,
            "focusOffset": 0,
            "focusPath": null,
            "isAtomic": false,
            "isBackward": false,
            "isFocused": false,
            "marks": null,
          },
        }
      }
    />
  </div>
  <WithStyles(RawDoneButton)
    onClick={[MockFunction]}
  />
</div>
`;
