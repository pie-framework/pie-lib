// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`response-area renderNode drag_in_the_blank should render an drag_in_the_blank 1`] = `
<span
  key="0"
  style={
    Object {
      "cursor": "pointer",
      "display": "inline-flex",
      "margin": "0 10px",
      "minHeight": "50px",
      "minWidth": "178px",
      "position": "relative",
    }
  }
>
  <DragSource(DropTarget(WithStyles(Component)))
    dragKey="0"
    n={
      Object {
        "data": Immutable.Map {},
        "key": "0",
        "type": "drag_in_the_blank",
      }
    }
    onChange={[Function]}
    removeResponse={[Function]}
    targetId="0"
    value={Object {}}
  />
</span>
`;

exports[`response-area renderNode explicit_constructed_response should render an explicit_constructed_response 1`] = `
<span
  key="0"
  style={
    Object {
      "cursor": "pointer",
      "display": "inline-flex",
      "margin": "0 10px",
      "minHeight": "50px",
      "minWidth": "178px",
      "position": "relative",
    }
  }
>
  <div
    onClick={[Function]}
    style={
      Object {
        "bottom": 0,
        "cursor": "default",
        "display": "none",
        "left": 0,
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
  />
  <div
    contentEditable={true}
    data-key="0"
    onMouseDown={[Function]}
    style={
      Object {
        "background": "#FFF",
        "border": "1px solid #C0C3CF",
        "borderRadius": "3px",
        "boxSizing": "border-box",
        "display": "inline-flex",
        "height": "36px",
        "minHeight": "36px",
        "minWidth": "178px",
        "overflow": "hidden",
        "padding": "8px",
        "position": "relative",
      }
    }
    suppressContentEditableWarning={true}
  />
</span>
`;

exports[`response-area renderNode inline_dropdown should render an inline_dropdown 1`] = `
<span
  key="0"
  style={
    Object {
      "cursor": "pointer",
      "display": "inline-flex",
      "height": "50px",
      "margin": "0 10px",
      "position": "relative",
      "top": "10px",
    }
  }
>
  <div
    contentEditable={false}
    onClick={[Function]}
    style={
      Object {
        "background": "#FFF",
        "border": "1px solid #C0C3CF",
        "borderRadius": "3px",
        "bottom": "10px",
        "boxSizing": "border-box",
        "display": "inline-flex",
        "height": "36px",
        "minWidth": "178px",
        "position": "relative",
      }
    }
  >
    <div
      style={
        Object {
          "background": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <div
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
          "padding": "8px 25px 8px 8px",
        }
      }
    >
      Â 
    </div>
    <Chevron
      direction="down"
      style={
        Object {
          "position": "absolute",
          "right": "5px",
          "top": "5px",
        }
      }
    />
  </div>
  <div
    onClick={[Function]}
    style={
      Object {
        "bottom": 0,
        "cursor": "default",
        "display": "none",
        "left": 0,
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
  />
  <div
    style={
      Object {
        "background": "#fff",
        "border": "1px solid #E0E1E6",
        "borderRadius": "3px",
        "boxShadow": "0px 0px 5px rgba(126, 132, 148, 0.3)",
        "boxSizing": "border-box",
        "display": "block",
        "maxHeight": "400px",
        "minWidth": "178px",
        "overflow": "scroll",
        "position": "absolute",
        "top": "30px",
        "visibility": "hidden",
        "zIndex": -1,
      }
    }
  />
</span>
`;

exports[`response-area renderNode item_builder should render an item_builder 1`] = `
<span
  contentEditable={true}
  key="0"
  style={
    Object {
      "alignItems": "center",
      "background": "#E0E1E6",
      "borderRadius": "2px 2px 0px 0px",
      "boxSizing": "border-box",
      "cursor": "initial",
      "display": "inline-flex",
      "justifyContent": "center",
      "minHeight": "52px",
      "minWidth": "178px",
      "padding": "10px",
      "width": "100%",
    }
  }
  suppressContentEditableWarning={true}
>
  <span
    data-key="0"
    onMouseDown={[Function]}
    style={
      Object {
        "background": "#fff",
        "border": "2px solid #89B7F4",
        "borderRadius": "3px",
        "boxSizing": "border-box",
        "display": "inline-block",
        "minHeight": "36px",
        "minWidth": "160px",
        "padding": "10px 25px 10px 10px",
        "position": "relative",
        "width": "100%",
      }
    }
  >
    <i
      contentEditable={false}
      onMouseDown={[Function]}
      style={
        Object {
          "cursor": "pointer",
          "fontSize": "20px",
          "fontStyle": "normal",
          "position": "absolute",
          "right": "8px",
          "top": "8px",
        }
      }
    >
      +
    </i>
  </span>
</span>
`;

exports[`response-area renderNode menu_item should render an menu_item 1`] = `
<span
  contentEditable={false}
  data-node-key="0"
  onMouseDown={[Function]}
  style={
    Object {
      "background": "#fff",
      "boxSizing": "border-box",
      "cursor": "pointer",
      "display": "block",
      "lineHeight": "30px",
      "margin": "0px 0px -20px 0px",
      "minHeight": "45px",
      "minWidth": "178px",
      "padding": "10px 25px 10px 10px",
      "position": "relative",
    }
  }
>
  <i
    data-key="0"
    onMouseDown={[Function]}
    style={
      Object {
        "cursor": "pointer",
        "fontSize": "20px",
        "fontStyle": "normal",
        "height": "50px",
        "lineHeight": "40px",
        "position": "absolute",
        "right": "0",
        "top": "0",
        "width": "25px",
        "zIndex": 3,
      }
    }
  >
    x
  </i>
  <div
    style={
      Object {
        "background": "transparent",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 2,
      }
    }
  />
</span>
`;

exports[`response-area renderNode response_menu_item should render children 1`] = `
<div>
  A
</div>
`;
