{"version":3,"sources":["../src/editable-html/input-chooser.jsx"],"names":["InputChooser","props","e","newSelection","inputOptions","find","i","html","target","value","setState","selected","userHtml","onChange","state","classes","italic","formControl","changeSelection","name","id","map","label","textArea","React","Component","PropTypes","object","isRequired","array","func","styles","width","fontSize","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IACaA,Y;;;;;AAOX,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;AADiB,wGAUD,UAACC,CAAD,EAAO;AACvB,UAAMC,YAAY,GAAG,MAAKF,KAAL,CAAWG,YAAX,CAAwBC,IAAxB,CAA6B,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,IAAF,KAAWL,CAAC,CAACM,MAAF,CAASC,KAA3B;AAAA,OAA7B,CAArB;;AAEA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAER,YAAZ;AAA0BS,QAAAA,QAAQ,EAAET,YAAY,CAACI;AAAjD,OAAd,EAAuE,YAAM;AAC3E,cAAKN,KAAL,CAAWY,QAAX,CAAoB,MAAKC,KAAL,CAAWF,QAA/B;AACD,OAFD;AAGD,KAhBkB;AAGjB,QAAMD,QAAQ,GAAGV,KAAK,CAACG,YAAN,CAAmB,CAAnB,CAAjB;AACA,UAAKU,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAARA,QADW;AAEXC,MAAAA,QAAQ,EAAED,QAAQ,CAACJ;AAFR,KAAb;AAJiB;AAQlB;;;;WAUD,kBAAS;AAAA;;AACP,wBAAkC,KAAKN,KAAvC;AAAA,UAAQc,OAAR,eAAQA,OAAR;AAAA,UAAiBX,YAAjB,eAAiBA,YAAjB;AACA,wBAA+B,KAAKU,KAApC;AAAA,UAAQF,QAAR,eAAQA,QAAR;AAAA,UAAkBD,QAAlB,eAAkBA,QAAlB;AACA,0BACE,0DACE,0DACE;AAAI,QAAA,SAAS,EAAEI,OAAO,CAACC;AAAvB,mFADF,CADF,eAIE,2CAJF,eAKE,gCAAC,uBAAD;AAAa,QAAA,SAAS,EAAED,OAAO,CAACE;AAAhC,sBACE,gCAAC,sBAAD;AAAY,QAAA,OAAO,EAAC;AAApB,0BADF,eAEE,gCAAC,kBAAD;AACE,QAAA,KAAK,EAAEN,QAAQ,CAACJ,IADlB;AAEE,QAAA,QAAQ,EAAE,KAAKW,eAFjB;AAGE,QAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE,QADI;AAEVC,UAAAA,EAAE,EAAE;AAFM;AAHd,SAQGhB,YAAY,CAACiB,GAAb,CAAiB,UAACf,CAAD;AAAA,4BAChB,gCAAC,oBAAD;AAAU,UAAA,GAAG,EAAEA,CAAC,CAACgB,KAAjB;AAAwB,UAAA,KAAK,EAAEhB,CAAC,CAACC;AAAjC,WACGD,CAAC,CAACgB,KADL,CADgB;AAAA,OAAjB,CARH,CAFF,CALF,eAsBE,2CAtBF,eAuBE,2CAvBF,eAwBE;AACE,QAAA,SAAS,EAAEP,OAAO,CAACQ,QADrB;AAEE,QAAA,QAAQ,EAAE,kBAACrB,CAAD;AAAA,iBAAO,MAAI,CAACQ,QAAL,CAAc;AAAEE,YAAAA,QAAQ,EAAEV,CAAC,CAACM,MAAF,CAASC;AAArB,WAAd,CAAP;AAAA,SAFZ;AAGE,QAAA,KAAK,EAAEG;AAHT,QAxBF,eA6BE,gCAAC,kBAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACX,KAAL,CAAWY,QAAX,CAAoB,MAAI,CAACC,KAAL,CAAWF,QAA/B,CAAN;AAAA;AAArD,yBA7BF,CADF;AAmCD;;;EA/D+BY,kBAAMC,S;;;iCAA3BzB,Y,eACQ;AACjBe,EAAAA,OAAO,EAAEW,sBAAUC,MAAV,CAAiBC,UADT;AAEjBxB,EAAAA,YAAY,EAAEsB,sBAAUG,KAAV,CAAgBD,UAFb;AAGjBf,EAAAA,QAAQ,EAAEa,sBAAUI,IAAV,CAAeF;AAHR,C;AAiErB,IAAMG,MAAM,GAAG;AACbd,EAAAA,WAAW,EAAE;AACXe,IAAAA,KAAK,EAAE;AADI,GADA;AAIbhB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,QAAQ,EAAE;AADJ,GAJK;AAObV,EAAAA,QAAQ,EAAE;AACRS,IAAAA,KAAK,EAAE,MADC;AAERE,IAAAA,MAAM,EAAE;AAFA;AAPG,CAAf;;eAae,wBAAWH,MAAX,EAAmB/B,YAAnB,C","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nexport class InputChooser extends React.Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    inputOptions: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const selected = props.inputOptions[0];\n    this.state = {\n      selected,\n      userHtml: selected.html,\n    };\n  }\n\n  changeSelection = (e) => {\n    const newSelection = this.props.inputOptions.find((i) => i.html === e.target.value);\n\n    this.setState({ selected: newSelection, userHtml: newSelection.html }, () => {\n      this.props.onChange(this.state.userHtml);\n    });\n  };\n\n  render() {\n    const { classes, inputOptions } = this.props;\n    const { userHtml, selected } = this.state;\n    return (\n      <div>\n        <div>\n          <em className={classes.italic}>You can enter your own markup here to see how it works with the editor.</em>\n        </div>\n        <br />\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"markup\">Example Markup</InputLabel>\n          <Select\n            value={selected.html}\n            onChange={this.changeSelection}\n            inputProps={{\n              name: 'markup',\n              id: 'markup',\n            }}\n          >\n            {inputOptions.map((i) => (\n              <MenuItem key={i.label} value={i.html}>\n                {i.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n        <br />\n        <textarea\n          className={classes.textArea}\n          onChange={(e) => this.setState({ userHtml: e.target.value })}\n          value={userHtml}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.props.onChange(this.state.userHtml)}>\n          Update Editor\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  formControl: {\n    width: '100%',\n  },\n  italic: {\n    fontSize: '11px',\n  },\n  textArea: {\n    width: '100%',\n    height: '100px',\n  },\n};\n\nexport default withStyles(styles)(InputChooser);\n"],"file":"input-chooser.js"}